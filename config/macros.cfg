# [gcode_macro G32]
# gcode:
#     SAVE_GCODE_STATE NAME=STATE_G32
#     G90
#     G28
#     QUAD_GANTRY_LEVEL
#     M109 S200
#     clean_nozzle
#     G28

#     ##  Uncomment for 300 build
#     G0 X150 Y150 Z30 F3600

#     RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
variable_bedtemp: 0
variable_hotendtemp: 0
gcode:		
  # Parameters
  {% set BED = params.BED|int %}
  {% set HOTEND = params.HOTEND|int %}
                                                                                          
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={BED}	
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={HOTEND}	
  
  BED_MESH_CLEAR
  G90                             ;Absolute positioning
  M117 Homing...
  G28                             ;Homes all the axis
  M117 Heating bed ......
  M140 S{BED}         ;Heats the bed to the temperature obtained from the slicer
  M190 S{BED}         ;Waits for the bed to reach temperature before running any other commands
  M109 S150                       ;Heats the nozzle to 150 in order to use TAP
  M117 Leveling Gantry ........
  QUAD_GANTRY_LEVEL               ;Levels the gantry
  BED_MESH_CALIBRATE              ; does a bed mesh and saves it as default for the current session
  M117 Loading Mesh ........
  BED_MESH_PROFILE Load=default   ;Loads the mesh - now has to be done explicitely, not automatically loaded anymore
  G0 X150 Y150 Z30 F3600          ;Moves to the centre of the bed
  M117 Heating Toolhead
  M104 S{HOTEND}        ;Heats the toolhead to the temp obtained from the slicer
  M109 S{HOTEND}        ;Waits for the toolhead to reach temperature before starting the print
  G90                             ;Absolute positining
  M117 Starting Print ......

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set unload = params.UNLOAD_AT_END|default(0)|int %}

    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    {% if unload|int == 1%}
      ERCF_EJECT
    {% endif %}
    M107                                     ; turn off fan

    TURN_OFF_HEATERS
    M18

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

# [gcode_macro PRINT_END]
# gcode:
# 	M400                         	   																	; wait for buffer to clear
# 	G92 E0                        	    																; zero the extruder
# 	G1 E-2.0 F3600                    																	; retract filament
# 	G91                             							 										; relative positioning
#     TURN_OFF_HEATERS									
#     M107                         	   			 	 													; turn off fan
#     G1 Z5 F3000                  	    			 													; move nozzle up 5mm
#     G90                           	    			 													; absolute positioning
# 	G1 X{printer.toolhead.axis_maximum.x - 10} Y{printer.toolhead.axis_maximum.y -10} F19500.0  			    ; park nozzle at rear

[gcode_macro G32]
gcode:
  BED_MESH_CLEAR
  G28
  QUAD_GANTRY_LEVEL
  G28
  G0 X150 Y150 Z30 F3600

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  60
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  60
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro caselight_white]
gcode:
     set_led led=caselight red=1 green=1 blue=1

[gcode_macro caselight_purple]
gcode:
     set_led led=caselight red=0.63 green=0.13 blue=0.94

[gcode_macro caselight_off]
gcode:
     set_led led=caselight

[gcode_macro sb_logo_on]
gcode:
     set_led led=sb_light red=0.63 green=0.13 blue=0.94 white=0 index=1 transmit=1

[gcode_macro sb_logo_off]
gcode:
    set_led led=sb_light red=0 green=0 blue=0 white=0 index=1 transmit=1

[gcode_macro sb_nozzle_on]
gcode:
    set_led led=sb_light red=1.0 green=1.0 blue=1.0 white=1.0 index=2 transmit=0
    set_led led=sb_light red=1.0 green=1.0 blue=1.0 white=1.0 index=3 transmit=1

[gcode_macro sb_nozzle_off]
gcode:
    set_led led=sb_light red=0 green=0 blue=0 white=0 index=2 transmit=0
    set_led led=sb_light red=0 green=0 blue=0 white=0 index=3 transmit=1